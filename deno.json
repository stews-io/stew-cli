{
  // note: @jsxImportSource pragma seems to be needed for compile to work
  "compilerOptions": {
    "jsx": "react-jsx",
    "jsxImportSource": "preact",
    "noErrorTruncation": true
  },
  "fmt": {
    "useTabs": false,
    "singleQuote": true,
    "semiColons": true,
    "indentWidth": 2
  },
  "lint": {
    "rules": {
      "exclude": ["no-empty-interface"]
    }
  },
  "imports": {
    "CssModule": "./declaration.d.ts",
    "preact": "https://esm.sh/preact@10.18.0",
    "preact/hooks": "https://esm.sh/preact@10.18.0/hooks",
    "preact/jsx-runtime": "https://esm.sh/preact@10.18.0/jsx-runtime",
    "stew/": "./stew-library/"
  },
  "tasks": {
    "bundleAndWriteStewBundles": "deno run -A ./development-scripts/bundleAndWriteStewBundles.ts",
    "serveStewBuild": "deno run -A ./development-scripts/serveStewBuild.ts",
    "runStewCommand": "deno run -A ./stew-command/main.ts",
    "buildStewExample": "deno task runStewCommand build ./stew-example/stew.config.ts",
    "buildAndServeStewExample": "rm -rf ./build && deno task bundleAndWriteStewBundles && deno task buildStewExample && deno task serveStewBuild ./build",
    "setupBuildAndServeFooExample": "rm -rf ./foo-example && rm -rf ./build_foo && mkdir ./foo-example && deno task runStewCommand init ./foo-example && deno task runStewCommand build ./foo-example/source/stew.config.ts --buildDirectoryPath ./build_foo && deno task serveStewBuild ./build_foo",
    "buildAssistantClient": "rm -rf ./__assistant-build && deno run -A ./development-scripts/buildAssistantClient.ts",
    "serveAssistantClient": "deno run -A ./development-scripts/serveAssistantClient.ts",
    "buildAndServeAssistantClient": "deno task buildAssistantClient && deno task serveAssistantClient"
  }
}
